SLAM {
    mapping {
        mapping_window_size = 15
        BA = true
        BA_ratio = 0.7
        BA_cam_lr = 0.001
        keyframe_every = 10
        mapping_every_frame = 5
        iters = 100
    }
    tracking {
        gt_cam = false
        lr = 0.005
        iters = 100
        Hedge = 0
        Wedge = 0
    }
}
train {
    expname = "replica"
    folder_suffix = "code_release"
    dataset_class = "datasets.scene_dataset.SLAMDataset"
    model_class = "model.network.SLAMNetwork"
    loss_class = "model.loss.SLAMLoss"
    lr_factor_for_coarse_grid = 20.0
    lr_factor_for_fine_grid = 20.0
    lr_factor_for_color_grid = 5.0
    tracking_num_pixels = 1024
    prev_checkpoint_freq = 50
    checkpoint_freq = 50
    prev_plot_freq = 50
    plot_freq = 50
    learning_rate = 0.002
    mapping_num_pixels = 8192
    split_n_pixels = 2580
}
plot {
    plot_nimgs = 1
    resolution = 512
    grid_boundary = [
        -1.0
        1.0
    ]
}
loss {
    assign_scale_shift_init = true
    warp_loss_weight = 0.5
    warp_loss_type = "l1"
    rgb_loss = "torch.nn.L1Loss"
    eikonal_weight = 0.1
    smooth_weight = 0.005
    depth_weight = 0.1
    normal_l1_weight = 0.05
    normal_cos_weight = 0.05
    flow_weight = 0.001
}
tracking_loss {
    rgb_loss = "torch.nn.L1Loss"
    eikonal_weight = 0
    smooth_weight = 0
    depth_weight = 0
    normal_l1_weight = 0
    normal_cos_weight = 0
}
dataset {
    data_dir = "../Datasets/processed/Replica"
    img_res = [
        680
        1200
    ]
    scan_id = 2
    use_mask = false
    use_gt_depth = true
    n_images = 2000
}
model {
    feature_vector_size = 64
    scene_bounding_sphere = 1.0
    use_warp_loss = true
    mapping_patchsizes = [
        1
    ]
    tracking_patchsizes = [
        1
    ]
    sampling_method = "important"
    density_method = "volsdf_gridpredefined"
    implicit_network {
        coarse {
            d_in = 3
            d_out = 1
            dims = [
                64
            ]
            geometric_init = true
            bias = 0.6
            skip_in = []
            weight_norm = true
            multires = 6
            inside_outside = true
            use_grid_feature = true
            base_size = 32
            end_size = 32
            logmap = 19
            num_levels = 4
            level_dim = 8
            divide_factor = 1.0
            embedding_method = "nerf"
        }
        fine {
            d_in = 3
            d_out = 1
            dims = [
                64
                64
                64
            ]
            geometric_init = true
            bias = 0.6
            skip_in = []
            weight_norm = true
            multires = 6
            inside_outside = true
            use_grid_feature = true
            base_size = 32
            end_size = 128
            logmap = 19
            num_levels = 8
            level_dim = 4
            divide_factor = 1.0
            embedding_method = "nerf"
        }
    }
    rendering_network {
        mode = "idr"
        d_in = 9
        d_out = 3
        dims = [
            64
            64
        ]
        weight_norm = true
        multires_view = 4
        per_image_code = false
        use_grid_feature = true
    }
    density {
        params_init {
            beta = 0.1
        }
        beta_min = 0.0001
    }
    gridpredefinedensity {}
    ray_sampler {
        near = 0.0
        N_samples = 64
        N_samples_eval = 640
        N_samples_extra = 32
    }
}